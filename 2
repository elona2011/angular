
1	Typescript and ES6
angular2采用typescript语法和ES6 ，比较常用的有：
1.1	箭头函数
chrome的调试窗口中箭头函数中的this会显示为指向Window，该显示是错误的，实际指向class
1.2	let
for(var i=1;i<5;i++){
 setTimeout(function timer(){
  console.log(i);
 },i*1000);
} //输出4个5

for(let i=1;i<5;i++){
 setTimeout(function timer(){
  console.log(i);
 },i*1000);
} //输出1，2，3，4
1.3	class
export class Hello {//定义类和构造函数
    name: string = 'World';
    constructor() {
        setTimeout(() => {
          this.name = 'NEW World'
        }, 2000);
    }
}
Constructor构造函数，初始化数据

参考：
http://www.typescriptlang.org/Handbook
http://es6.ruanyifeng.com/
2	import,export
import引入依赖的模块及自定义组件
例1：import {ComponentMetadata as Component, ViewMetadata as View, bootstrap, CORE_DIRECTIVES } from 'angular2/angular2';
例2：import {Zippy} from 'zippy';

export输出组件和函数
例1：export class Search {}
例2：export function status(response) {...}
2.1	依赖关系
FORM_DIRECTIVES:ng-model
ROUTER_DIRECTIVES:<router-outlet>
CORE_DIRECTIVES:NgIf, NgFor, Pipe, OnInit		包含所有CORE里的指令
例1：
import {Component, View, CORE_DIRECTIVES, NgStyle} from 'angular2/angular2';
@View({
	directives: [CORE_DIRECTIVES, NgStyle]
})
例2：
import {Component, View, EventEmitter} from 'angular2/angular2';
import {FORM_DIRECTIVES} from 'angular2/forms';
import { RouterOutlet } from 'angular2/router';
import { RouterLink } from 'angular2/router';
import { ROUTER_DIRECTIVES, RouteConfig } from 'angular2/router';
import { ROUTER_BINDINGS, LocationStrategy, HashLocationStrategy } from 'angular2/router';
